#! /usr/bin/env node
var utils = require('../moment-timezone-utils');
var data = require('../data/unpacked/latest.json');
var path = require('path');
var fs = require('fs');

var range = process.argv[2];
var start_year = range.substr(0,4);
var end_year = range.substr(5,4);

validateInput(start_year, end_year);
createBuild(start_year, end_year);

function validateInput(start_year, end_year){
    if (!start_year || !end_year) printHelp('Please provide start and end years');
    if (!isValidYear(start_year)) printHelp('Invalid start_year: ' + start_year);
    if (!isValidYear(end_year)) printHelp('Invalid end_year: ' + end_year);
}

function isValidYear(value){
    return value > 1900 && value < 2050;
}

function printHelp(errorMessage){
    console.log('Usage: moment-timezone-build [start_year] [end_year]');
    console.log(errorMessage);
    process.exit(0);
}

function createBuild(start_year, end_year) {
    var source = fs.readFileSync(path.join(__dirname, '../moment-timezone.js')).toString();
    var dest = 'builds/moment-timezone-with-data-' + start_year + '-' + end_year + '.js';

    data = utils.tz.filterLinkPack(data, start_year, end_year, {});
    data = JSON.stringify(data, null, '\t');
    data = data.split('\n').join('\n\t');
    data = 'loadData(' + data + ');\n';
    source = source.replace('// INJECT DATA', data);

    fs.writeFileSync(dest, source);
    console.log('Successfully created ' + dest);
}